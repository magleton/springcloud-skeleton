server:
  tomcat:
    uri-encoding: UTF-8
    threads:
      min-spare: 30
      max: 1000
    remoteip:
      remote-ip-header: X-Real-IP
      protocol-header: X-Forwarded-Proto
  servlet:
    context-path: /
  port: 8000
  forward-headers-strategy: framework

spring:
  application:
    name: cloud-order-service
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: 1
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driver-class-name: com.p6spy.engine.spy.P6SpyDriver
      url: jdbc:p6spy:mysql://127.0.0.1:3306/geoxus?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false
      #driver-class-name: com.mysql.jdbc.Driver
      #url: jdbc:mysql://xx.xx.xx.xx:3306/xx?useSSL=false&useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false
      username: britton
      password: britton
      initial-size: 10
      max-active: 100
      min-idle: 10
      max-wait: 60000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 800000
      #Oracle需要打开注释
      #validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: britton
        login-password: britton
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true

  # redis参数
  redis:
    redisson:
      config: classpath:redisson.yml
    database: 0
    host: 192.168.56.101
    port: 6379
    password:    # 密码（默认为空）
    timeout: 6000ms  # 连接超时时长（毫秒）
    jedis:
      pool:
        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 10      # 连接池中的最大空闲连接
        min-idle: 5       # 连接池中的最小空闲连接
  cache:
    type: redis
    ehcache:
      config: classpath:ehcache.xml
    redis:
      key-prefix: redisCache
    cache-names:
      - __DEFAULT__
      - common
  rabbitmq:
    host: 192.168.56.101
    port: 5672
    username: britton
    password: britton
    publisher-returns: true
    template:
      mandatory: true
    publisher-confirm-type: simple
  cloud:
    alibaba:
      seata:
        tx-service-group: cloud-order-service-seata-service-group

debug: false

seata:
  enable-auto-data-source-proxy: false

eureka:
  instance:
    instance-id: ${spring.application.name}
    #访问路径可以显示IP地址
    prefer-ip-address: true
  client:
    #表示是否将自己注册进EurekaServer默认为true。
    #register-with-eureka: false
    #是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetchRegistry: true
    service-url:
      #单机
      defaultZone: http://127.0.0.1:7001/eureka
      # 集群
      #defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka  # 集群版
knife4j:
  setting:
    language: zh-CN
    footerCustomContent: AAAAA|BBBB|VVVVV
    enableGroup: true
  enable: true
  documents:
    - group: 2.X版本
      name: 我的文档一
      locations: classpath:markdown/*
    - group: 默认接口
      name: 我的文档二
      locations: classpath:markdown/*