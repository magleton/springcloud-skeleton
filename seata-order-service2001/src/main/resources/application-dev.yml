server:
  tomcat:
    uri-encoding: UTF-8
    threads:
      min-spare: 30
      max: 1000
    remoteip:
      remote-ip-header: X-Real-IP
      protocol-header: X-Forwarded-Proto
  servlet:
    context-path: /
  port: 2001
  forward-headers-strategy: framework

spring:
  application:
    name: seata-order-service
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driver-class-name: com.p6spy.engine.spy.P6SpyDriver
      url: jdbc:p6spy:mysql://192.168.1.102:3306/geoxus?useSSL=false&useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false
      #driver-class-name: com.mysql.jdbc.Driver
      #url: jdbc:mysql://xx.xx.xx.xx:3306/xx?useSSL=false&useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false
      username: britton
      password: britton
      initial-size: 10
      max-active: 100
      min-idle: 10
      max-wait: 60000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 800000
      #Oracle需要打开注释
      #validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: britton
        login-password: britton
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true

  # redis参数
  redis:
    redisson:
      config: classpath:redission.yml
    database: 0
    host: 192.168.1.102
    port: 6379
    password:    # 密码（默认为空）
    timeout: 6000ms  # 连接超时时长（毫秒）
    jedis:
      pool:
        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 10      # 连接池中的最大空闲连接
        min-idle: 5       # 连接池中的最小空闲连接
  cache:
    type: redis
    ehcache:
      config: classpath:ehcache.xml
    redis:
      key-prefix: redisCache
    cache-names:
      - __DEFAULT__
      - common
  rabbitmq:
    host: 192.168.1.102
    port: 5672
    username: britton
    password: britton
    publisher-returns: true
    template:
      mandatory: true
    publisher-confirm-type: simple
  cloud:
    alibaba:
      seata:
        tx-service-group: fsp_tx_group

seata:
  enable-auto-data-source-proxy: false

debug: false

mybatis-plus:
  mapper-locations: classpath:/mappers/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.geoxus.core.framework.entity;com.geoxus.modules.*.entity
  typeEnumsPackage: com.geoxus.core.framework.entity.enums;com.geoxus.modules.*.entity.enums
  typeHandlersPackage: com.geoxus.core.framework.handlers
  global-config:
    # 数据库相关配置
    db-config:
      #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: AUTO
      #字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
      field-strategy: not_empty
      #驼峰下划线转换
      db-column-underline: true
      #数据库大写下划线转换
      capital-mode: true
      #逻辑删除配置
      logic-delete-value: 0
      logic-not-delete-value: 1
      column-format: "%s"
    #刷新mapper 调试神器
    refresh: true
  # 原生配置
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
    aggressive-lazy-loading: false
    lazy-loading-enabled: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

eureka:
  client:
    #表示是否将自己注册进EurekaServer默认为true。
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetchRegistry: true
    service-url:
      #单机
      defaultZone: http://127.0.0.1:7001/eureka
      # 集群
      #defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka  # 集群版
  instance:
    instance-id: seata-order-service
    #访问路径可以显示IP地址
    prefer-ip-address: true
